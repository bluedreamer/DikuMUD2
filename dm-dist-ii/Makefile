# The makefile this makefile includes
MAKEFILE =	Makefile.linux

# You may have to change the use of include, ifneq, and endif to fit your make.
#
# Oct 22, 1993 [gnort] : Did a major overhaul of Makefile.
# Jun 25, 1994 [gnort] : And another one.
# Feb 03, 1995 [gnort] : Split the makefile into architecture dependant parts.
#
# After adding/changing #include's in sourcefiles or adding new sourcefiles:
# > make depend
#
# If make complains about a file `.depends' not present:
# > touch .depends ; make depend
#

#
#
#  Set the flag "-DMUD_DEBUG" to get full memory debug, type checks,
#     and command / sfun history.
#


SYSFLAGS	=	-pipe -DMUD_DEBUG -DMEMORY_DEBUG
# -DPROFILE -pg
#SYSFLAGS	=	-DBITCONV
#SYSFLAGS       =       -DPROFILE -pg

SERVER	=	dmserver

include $(MAKEFILE)

LEXFILTER=	| perl lexfilter $(SYSPORT) # Got to filter lex for bad code

LINK.cpp=	$(CPP) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS)
LINK.c	=	$(LD) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS)

DEBUG	=	-g

CFL	=	$(DEBUG) $(SYSPORT) $(SYSFLAGS) $(EXTRA_CFLAGS)
CFLAGS	=	$(CFL)   -Wall -Wno-unused -Wno-format-overflow -Wno-stringop-truncation -Wno-register

# (f)lex/yacc/bison generated c-files are notorious for their lousy C
# hence, no warnings...
CFLAGS2	= 	$(CFL) -ansi

YFLAGS	=	-d -v 	# y.tab.h generator, and verbose output

LDLIBS	=	$(EXTRA_LDLIBS)
#LDFLAGS	=	-static

OPT	=	#-O6 	# -O might be a good idea, but we have a tough time
                        # just getting the show on the road.   :)

# SOURCES

# all .c files used by Makefile (including files generated by lex/yacc)
SRCS	=	$(SERV_SRCS)

# c-files for server
SERV_SRCS = account.c act_change.c act_comm.c act_info.c act_movement.c\
  act_obj1.c act_obj2.c act_obj3.c act_offensive.c act_other.c act_skills.c\
  act_social.c act_wizard.c act_wstat.c affect.c apf_affect.c ban.c\
  bank.c blkfile.c board.c comm.c common.c constants.c convert.c create.c db.c\
  db_file.c db_utils.c demigod.c destruct.c dictionary.c dijkstra.c main.c \
  eliza.c experience.c fight.c files.c guild.c handler.c help.c act_look.c \
  hometown.c interpreter.c justice.c limits.c magic.c magic1.c magic2.c \
  memory.c mobact.c modify.c money.c nanny.c nice.c pain.c pcsave.c \
  postoffice.c protocol.c queue.c reception.c shop.c signals.c skills.c \
  slime.c spec_assign.c spec_procs.c spell_parser.c str_parse.c string.c \
  swap.c sysport.c system.c teach.c textutil.c tif_affect.c trie.c utility.c \
  weather.c zon_basis.c zon_midgaard.c zon_wiz.c \
  zone_boot.c zone_reset.c namelist.c structs.c dilfld.c extra.c \
  dilinst.c dilexp.c dilrun.c dbfind.c competition.c unitfind.c combat.c \
  select.c persist.c bytestring.c config.c connectionlog.c

# h-files for server
SERV_HDRS = account.h affect.h ban.h blkfile.h comm.h common.h db.h db_file.h\
  dil.h files.h handler.h interpreter.h justice.h limits.h magic.h money.h \
  movement.h postoffice.h skills.h spells.h structs.h sysport.h \
  system.h textutil.h trie.h utils.h values.h

# OBJECTS

SERV_OBJS =	$(SERV_SRCS:.c=.o)

   # ------------------------------ oOoOoOo ------------------------------ #

all:	$(SERVER)
	@cd DMC;make all
	@cd DIL;make all
	@cd Mplex;make all
	@cd Utility;make all

spells:
	perl spellconvert.perl

$(SERVER):	$(SERV_OBJS)
	$(LINK.cpp) $(SERV_OBJS) -lcrypt -o $@

$(SERV_OBJS):
	$(CPP) -D DMSERVER $(OPT) $(CFLAGS) -c $(@:.o=.c) -o $@

clean:
	-rm -f *.o *.dh dmserver

realclean: clean
	@-rm -f $(SERVER)
	@cd DMC;make clean
	@cd DIL;make clean
	@cd Mplex;make clean
	@cd Utility;make clean
	@cd zon;rm -f *.data *.reset *.err
	@cd lib;rm -f swap.blk
	@rm -f core

package:
	@strip dmserver dmc dil mplex
	@tar cfvzh package.tgz dmserver dmc dil mplex values.h \
         wmacros.h composed.h base.h spelldef.h

# Need to get the tmp_*.c files into .depends as well
depend:	
	@echo Updating dependencies...
	@$(MKDPND) $(SRCS) > .depends
	@echo Done.

DIFFOPT	=	--ignore-all-space --ignore-blank-lines --context --new-file \
		--exclude-from=.patch_exclude

diff:
	@echo Remember, 1 is diff\'s normal exit-value...
	-$(DIFF) $(DIFFOPT) old_src . > Valhalla.patch

TAGS:	$(SERV_SRCS) $(SERV_HDRS) # Only tags for server...
	@echo Building TAGS file....
	@etags $(SERV_SRCS) $(SERV_HDRS)
	@echo Done.

data:
	DMC/dmc -m zon/*.zon zon/*.zon.Z

backup:
	tar cvf - *.[chly] | gzip -9 >! dikusrc.tgz
	tar cvf - Makefile TODO distfile | gzip -9 >! dikumisc.tgz
	tar cvf - zon/* | gzip -9 >! dikuzon.tgz
	tar cvf - lib/link/* | gzip -9 >! dikulib.tgz

src:
	tar cf - *.[chly] Filelist Makefile.* TODO TODO.gnort .patch_exclude \
            lexfilter sign addheader pack.perl list.perl \
          | gzip -1 > Src.tgz

#.include ".depends"		# For `normal' make
include .depends		# For gnu-make
